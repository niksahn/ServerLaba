version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://servers-kafka-1:9092 
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network


  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  app:
    build:
      context: ./laba1
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      MONGO_URL: "mongodb://mongodb:27017"
    networks:
      - app-network
    depends_on:
      - mongodb

  user-service:
    build:
      context: ./userService
      dockerfile: Dockerfile
    ports:
      - "8070:8070"
    environment:
      MONGO_URL: "mongodb://mongodb:27017"
    networks:
      - app-network
    depends_on:
      - mongodb

  authservice:
    build: 
      context: ./auth/AuthService
      dockerfile: Dockerfile
    ports:
      - "8010:8010"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  prolog-server:
    build:
      context: ./prolog
      dockerfile: Dockerfile
    container_name: prolog-server
    ports:
      - "8090:8090"
    networks:
      - app-network
    depends_on:
      - redis
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
volumes:
  mongo-data:

networks:
  app-network:
